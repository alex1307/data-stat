# Get enums: /enums/:enum_name
GET https://localhost:3000/enums/make?source=estimated_price
Accept: application/json


# Search /filter
###
# Get enums: /enums/:make/models
GET https://localhost:3000/enums/BMW/models?source=estimated_price
Accept: application/json

s
###

POST https://localhost:3000/data
Content-Type: application/json
Accept: application/json

{
  "source": "estimated_price",
  "group_by": ["source", "year"],
  "filter_string": [
                {"Like":[{"make":"Mercedes-Benz"}, true]}
            ],
  "aggregate": {
    "price": ["sum", 
        "min", 
        "max", 
        "mean", 
        "median", 
        {"quantile": 0.25}
    ]
  },
  "filter_i32": [
                {"Gte":[{"mileage":10000, "price": 10000, "cc": 2500}, true]},
                {"Lte":[{"mileage":60000, "price": 50000}, true]},
                {"In":["year",[2016, 2017, 2018]]}
            ],
  "filter_f64": [],
  "sort": [{"asc": ["source", true]}, {"asc": ["year", true]}]
}


# Search /filter
###
# Post request example
POST https://localhost:3000/json
Content-Type: application/json
Accept: application/json

{ "source": "estimated_price", "group_by": [], "aggregate": {}, "sort": [], "filter_string": [ { "Eq": [ { "make": "Audi" }, true ] } ], "filter_i32": [ { "Gte": [ { "mileage": 20000 }, true ] } ], "filter_date": [], "filter_f64": [] }

###
# Post request example
###

POST https://localhost:3000/json
Content-Type: application/json
Accept: application/json

{ "source": "estimated_price", "group_by": [], "aggregate": {}, "sort": [], "filter_string": [ { "Eq": [ { "make": "Audi" }, true ] } ], "filter_i32": [ { "Gte": [ { "mileage": 20000 }, true ] } ], "filter_date": [], "filter_f64": [] }

# {
#   "group_by": ["source", "year"],
#   "filter_string": [
#     {"Like":[{"make":"Mercedes-Benz"}, true]}
#   ],
#   "aggregete": {
#     "price": ["sum", 
#         "min", 
#         "max", 
#         "mean", 
#         "median", 
#         {"quantile": 0.25}
#     ]
#   },
#   "filter_i32": [{"Gte":[{ "year": 2014 }, true]}],
#   "filter_f64": [],
#   "sort": [{"asc": ["source", true]}, {"asc": ["year", true]}]
# }

# ###

# # Put request example
# PUT http://localhost:3000/api/v1/resource/1
# Content-Type: application/json

# {
#   "key": "new_value"
# }

# ###

# # Delete request example
# DELETE http://localhost:3000/api/v1/resource/1

###
# Post request example

###
POST https://ehomeho.com:3000/json
Content-Type: application/json
Accept: application/json

{
    "source": "estimated_price",
    "group_by": [],
    "aggregate": {},
    "search": "4wd",
    "sort": [],
    "filter_string": [
        {
            "Eq": [
                {
                    "make": "BMW"
                },
                true
            ]
        },
        {
            "Eq": [
                {
                    "model": "320"
                },
                true
            ]
        },
        {
            "In": [
                "gearbox",
                [
                    "Automatic"
                ]
            ]
        },
        {
            "In": [
                "engine",
                [
                    "Diesel",
                    "Petrol"
                ]
            ]
        }
    ],
    "filter_i32": [
        {
            "In": [
                "year",
                [
                    2014,
                    2015,
                    2017,
                    2018
                ]
            ]
        }
    ],
    "filter_f64": []
}

###